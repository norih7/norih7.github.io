{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///../common/utils/Link/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../common/components/organisms/Wrapper/index.js","webpack:///../common/components/organisms/Header/index.js","webpack:///./src/contaienrs/Header/index.js","webpack:///../common/components/organisms/Footer/index.js","webpack:///./src/components/pages/Layout/index.js"],"names":["IndexPage","props","postList","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_pages_Layout__WEBPACK_IMPORTED_MODULE_3__","contentName","edges","map","_ref","i","node","key","_node$frontmatter","frontmatter","path","title","date","className","css","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","createUri","excerpt","listQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","DEFAULT_STYLE","width","Wrapper","style","react_react_default","any","defaultProps","link","Header","siteTitle","list","item","href","organisms_Wrapper","HeaderConnect","connect","count","dispatch","increment","type","Footer","Layout","react_default","gatsby_browser_entry","_data$site$siteMetada","site","siteMetadata","description","contentHeader","Fragment","Helmet_default","meta","name","content","lang","contaienrs_Header","padding","organisms_Footer","_2562398822"],"mappings":"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","file":"component---src-pages-index-js-a562c1d09b242c86434c.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/pages/Layout\";\nimport { createUri } from \"@norih/common/utils/Link\";\nimport css from \"./index.module.css\";\n\nconst IndexPage = props => {\n    const postList = props.data.allMarkdownRemark;\n    return (\n        <Layout contentName=\"blog\">\n            {postList.edges.map(({ node }, i) => {\n                const key = `section-${i}`;\n                const { path, title, date } = node.frontmatter;\n                return (\n                    <section className={css[\"entry\"]} key={key}>\n                        <Link to={createUri(path)} className=\"link\">\n                            <h1>{title}</h1>\n                        </Link>\n                        <span className={css[\"date\"]}>{date}</span>\n                        <p>{node.excerpt}</p>\n                    </section>\n                );\n            })}\n        </Layout>\n    );\n};\nexport default IndexPage;\nexport const listQuery = graphql`\n    query ListQuery {\n        allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n            edges {\n                node {\n                    excerpt(pruneLength: 150)\n                    frontmatter {\n                        date(formatString: \"MMMM Do YYYY\")\n                        title\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * 実行環境に適切なURIを生成する\n * @param {String} path\n */\nexport function createUri(path) {\n    return process.env.NODE_ENV === \"development\" ? path : `/react${path}`;\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./index.module.css\";\n\nconst DEFAULT_STYLE = {\n    width: \"900px\"\n};\n\n/**\n * Wrapperコンポーネント\n * 受け取ったchildrenを中央寄せで表示する\n * @param {Object} props\n */\nfunction Wrapper(props) {\n    const { children } = props;\n    const style = Object.assign({}, DEFAULT_STYLE, props.style);\n    return (\n        <div className={css[\"wrapper\"]} style={style}>\n            {children}\n        </div>\n    );\n}\n\nWrapper.propTypes = {\n    style: PropTypes.object,\n    children: PropTypes.any\n};\n\nWrapper.defaultProps = {\n    style: DEFAULT_STYLE,\n    children: \"\"\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport css from \"./style.module.css\";\nimport Wrapper from \"@norih/common/components/organisms/Wrapper\";\nimport { createUri } from \"@norih/common/utils/Link\";\n\nconst link = [\n    {\n        to: \"/about/\",\n        title: \"about\"\n    }\n];\n\nfunction Header(props) {\n    const { siteTitle } = props;\n    const list = link.map((item, i) => {\n        const { to, title } = item;\n        const key = `menu-list-${i}`;\n        return (\n            <li key={key}>\n                <a href={createUri(to)}>{title}</a>\n            </li>\n        );\n    });\n\n    return (\n        <div className={css[\"header\"]}>\n            <div className={css[\"menu\"]}>\n                <Wrapper>\n                    <ul key=\"menu\">\n                        <li className={css[\"logo\"]} key=\"menu-list-home\">\n                            <a href={createUri(\"/\")}>{siteTitle}</a>\n                        </li>\n                        {list}\n                    </ul>\n                </Wrapper>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport Header from \"@norih/common/components/organisms/Header\";\n\nconst mapStateToProps = ({ count }) => {\n    return { count };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return { increment: () => dispatch({ type: `FETCH` }) };\n};\n\nconst HeaderConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nexport default HeaderConnect;\n","import React from \"react\";\nimport Wrapper from \"@norih/common/components/organisms/Wrapper\";\nimport css from \"./index.module.css\";\n\nfunction Footer(props) {\n    const { children } = props;\n    return (\n        <div className={css[\"footer\"]}>\n            <Wrapper>{children}</Wrapper>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Header from \"../../../contaienrs/Header\";\nimport Footer from \"@norih/common/components/organisms/Footer\";\nimport Wrapper from \"@norih/common/components/organisms/Wrapper\";\nimport css from \"./index.module.css\";\n\nconst Layout = ({ children, contentName }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `}\n        render={data => {\n            const { title, description } = data.site.siteMetadata;\n            const contentHeader =\n                typeof contentName == \"undefined\" ? null : (\n                    <div className={css[\"contentHeader\"]}>\n                        <h2>{contentName}</h2>\n                    </div>\n                );\n\n            return (\n                <React.Fragment>\n                    <Helmet\n                        title={data.site.siteMetadata.title}\n                        meta={[\n                            { name: \"description\", content: \"Sample\" },\n                            { name: \"keywords\", content: \"sample, something\" }\n                        ]}\n                    >\n                        <html lang=\"ja\" />\n                    </Helmet>\n                    <Header siteTitle={title} description={description}>\n                        {contentHeader}\n                    </Header>\n                    <Wrapper style={{ padding: \"40px 0\" }}>{children}</Wrapper>\n                    <Footer>&copy; {title} </Footer>\n                </React.Fragment>\n            );\n        }}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}